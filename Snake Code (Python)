---To run this code, you'll need to have the Pygame library installed. You can install it using: pip install pygame

import pygame
import sys
import random

# Initialize Pygame
pygame.init()

# Constants
SCREEN_WIDTH = 640
SCREEN_HEIGHT = 480
GRID_SIZE = 20
SNAKE_SPEED = 15

# Colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)

# Create the game screen
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Snake Game")

# Initialize variables
snake = [(100, 50)]
snake_direction = (1, 0)  # Initially moving to the right
food = (random.randrange(1, (SCREEN_WIDTH // GRID_SIZE)) * GRID_SIZE,
        random.randrange(1, (SCREEN_HEIGHT // GRID_SIZE)) * GRID_SIZE)

score = 0

# Main game loop
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP and snake_direction != (0, 1):
                snake_direction = (0, -1)
            if event.key == pygame.K_DOWN and snake_direction != (0, -1):
                snake_direction = (0, 1)
            if event.key == pygame.K_LEFT and snake_direction != (1, 0):
                snake_direction = (-1, 0)
            if event.key == pygame.K_RIGHT and snake_direction != (-1, 0):
                snake_direction = (1, 0)

    # Move the snake
    new_head = (snake[0][0] + snake_direction[0] * GRID_SIZE, snake[0][1] + snake_direction[1] * GRID_SIZE)
    snake.insert(0, new_head)

    # Check for collisions
    if snake[0] == food:
        score += 10
        food = (random.randrange(1, (SCREEN_WIDTH // GRID_SIZE)) * GRID_SIZE,
                random.randrange(1, (SCREEN_HEIGHT // GRID_SIZE)) * GRID_SIZE)
    else:
        snake.pop()

    if (snake[0][0] < 0 or snake[0][0] >= SCREEN_WIDTH or
            snake[0][1] < 0 or snake[0][1] >= SCREEN_HEIGHT or
            snake[0] in snake[1:]):
        running = False

    # Draw everything on the screen
    screen.fill(BLACK)
    for segment in snake:
        pygame.draw.rect(screen, GREEN, pygame.Rect(segment[0], segment[1], GRID_SIZE, GRID_SIZE))
    pygame.draw.rect(screen, RED, pygame.Rect(food[0], food[1], GRID_SIZE, GRID_SIZE))

    # Display score
    font = pygame.font.Font(None, 36)
    score_text = font.render(f"Score: {score}", True, WHITE)
    screen.blit(score_text, (10, 10))

    pygame.display.flip()

    # Control game speed
    pygame.time.Clock().tick(SNAKE_SPEED)

# Game over screen
game_over_font = pygame.font.Font(None, 72)
game_over_text = game_over_font.render("Game Over", True, WHITE)
game_over_rect = game_over_text.get_rect(center=(SCREEN_WIDTH // 2, SCREEN_HEIGHT // 2))
screen.blit(game_over_text, game_over_rect.topleft)
pygame.display.flip()

# Wait for a few seconds before quitting
pygame.time.delay(2000)

# Quit Pygame
pygame.quit()
sys.exit()
